# Generated by Django 3.0.6 on 2020-05-06 11:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('calendarui', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DqFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dq_feed_id', models.IntegerField(db_column='DQ_FEED_ID')),
                ('source_datafile_name', models.CharField(blank=True, db_column='SOURCE_DATAFILE_NAME', max_length=150, null=True)),
                ('source_datafile_type', models.CharField(blank=True, db_column='SOURCE_DATAFILE_TYPE', max_length=25, null=True)),
                ('source_datafile_path', models.CharField(blank=True, db_column='SOURCE_DATAFILE_PATH', max_length=150, null=True)),
                ('source_datafile_display', models.CharField(blank=True, db_column='SOURCE_DATAFILE_DISPLAY', max_length=150, null=True)),
                ('environment', models.CharField(blank=True, db_column='ENVIRONMENT', max_length=50, null=True)),
                ('feed_received_via', models.CharField(blank=True, db_column='FEED_RECEIVED_VIA', max_length=50, null=True)),
                ('category', models.CharField(blank=True, db_column='CATEGORY', max_length=50, null=True)),
                ('received_date', models.DateTimeField(blank=True, db_column='RECEIVED_DATE', null=True)),
                ('review_date', models.DateTimeField(blank=True, db_column='REVIEW_DATE', null=True)),
                ('reviewed_by', models.CharField(blank=True, db_column='REVIEWED_BY', max_length=75, null=True)),
                ('total_rows_in_source_file', models.IntegerField(blank=True, db_column='TOTAL_ROWS_IN_SOURCE_FILE', null=True)),
                ('load_table_name', models.CharField(blank=True, db_column='LOAD_TABLE_NAME', max_length=150, null=True)),
                ('load_date', models.DateTimeField(blank=True, db_column='LOAD_DATE', null=True)),
                ('loaded_by', models.CharField(blank=True, db_column='LOADED_BY', max_length=50, null=True)),
                ('rows_loaded', models.IntegerField(blank=True, db_column='ROWS_LOADED', null=True)),
                ('rows_failed_to_load', models.IntegerField(blank=True, db_column='ROWS_FAILED_TO_LOAD', null=True)),
                ('dest_golden_table_name', models.CharField(blank=True, db_column='DEST_GOLDEN_TABLE_NAME', max_length=150, null=True)),
                ('dest_golden_table_type', models.CharField(blank=True, db_column='DEST_GOLDEN_TABLE_TYPE', max_length=25, null=True)),
                ('dest_golden_count', models.IntegerField(blank=True, db_column='DEST_GOLDEN_COUNT', null=True)),
                ('dest_quar_table_name', models.CharField(blank=True, db_column='DEST_QUAR_TABLE_NAME', max_length=150, null=True)),
                ('dest_quar_table_type', models.CharField(blank=True, db_column='DEST_QUAR_TABLE_TYPE', max_length=25, null=True)),
                ('dest_quarantine_count', models.IntegerField(blank=True, db_column='DEST_QUARANTINE_COUNT', null=True)),
                ('dq_processing_date', models.DateTimeField(blank=True, db_column='DQ_PROCESSING_DATE', null=True)),
                ('dq_processed_by', models.CharField(blank=True, db_column='DQ_PROCESSED_BY', max_length=50, null=True)),
                ('app_id', models.IntegerField(blank=True, db_column='APP_ID', null=True)),
                ('org_id', models.IntegerField(blank=True, db_column='ORG_ID', null=True)),
                ('create_dt', models.DateTimeField(blank=True, db_column='CREATE_DT', null=True)),
                ('update_dt', models.DateTimeField(blank=True, db_column='UPDATE_DT', null=True)),
                ('file_status', models.CharField(blank=True, db_column='FILE_STATUS', max_length=50, null=True)),
                ('dq_datafile', models.ForeignKey(blank=True, db_column='DQ_DATAFILE_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='calendarui.DqDatafile')),
            ],
        ),
    ]
